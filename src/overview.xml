<?xml version="1.0" encoding="UTF-8"?>

<!--********************************************************************
Copyright 2022 Dan Margalit and Joseph Rabinoff

Permission is granted to copy, distribute and/or modify this document
under the terms of the GNU Free Documentation License, Version 1.3 or
any later version published by the Free Software Foundation.  A copy of
the license is included in gfdl.xml.
*********************************************************************-->

<preface xml:id="overview">
  <title>Overview</title>

<paragraphs>
  <title>The Subject of This Textbook</title>
  <p>
    Before moving on with the content of this textbook, we take a minute to discuss a basic question: what <em>is</em> linear algebra?
    <ul>
      <li>
        <em>Linear:</em> having to do with lines, planes, etc.
      </li>
      <li>
        <em>Algebra:</em> solving equations involving unknowns.
      </li>
    </ul>
    The name of the textbook highlights an important theme: the synthesis between algebra and geometry.  It will be very important to us to understand systems of linear equations both <em>algebraically</em> (writing equations for their solutions) and <em>geometrically</em> (drawing pictures and visualizing).
  </p>

  <remark>
    <p>
      The term <q>algebra</q> was coined by the <m>9</m>th century mathematician Abu Ja<rsq/>far Muhammad ibn Musa al-Khwarizmi.  It comes from the Arabic word <em>al-jebr</em>, meaning reunion of broken parts.
    </p>
  </remark>

  <p>
    More formally, we will study systems of <term>linear equations</term>, such as
    <me>
      \syseq{
      x + 3y - z = 4;
      2x - y + 3z = 17;
      \. \+ y - 4z = -3\rlap.
      }
    </me>
    At the simplest level, solving a system of linear equations is not very hard.  You may have learned in high school how to solve a system like the one above.  However, in real life, the situation quickly becomes more complicated.
    <ul>
      <li>
        Applications of linear algebra often involve systems of thousands (or millions) of equations in as many variables.  Solving such systems is not easy, even for a computer.  A central question is therefore: What kinds of linear algebra questions can a computer answer effectively?  What is the most computationally efficient way formulate a problem?  Computational considerations motivate and inform much of this text.
      </li>
      <li>
        In many situations, such as data modeling, the systems of equations that arise generally do not have an exact solution.  In that case, it is important to understand what is the best <em>approximate</em> solution.  Can we compute it efficiently?
      </li>
      <li>
        It is common to use a system of linear equations to express the <em>transition</em> of a system from one state to the next.  For instance, if the state of a system at time <m>n</m> is represented by three numbers <m>(x_n,y_n,z_n)</m>, then the transition from time <m>n</m> to time <m>n+1</m> might have the form
        <me>
          \syseq{
              x_{n+1} = \. \+ 6y_n + 8z_n;
              y_{n+1} = \frac 12x_n;
              z_{n+1} = \. \+ \frac 12y_n\rlap.
            }
        </me>
        (See this <xref ref="overview-eg-rabbits"/> below.)  How does one <q>solve</q> a system of equations like this?
      </li>
    </ul>

  </p>
</paragraphs>

<paragraphs>
  <title>Applications of Linear Algebra</title>

  <p>
    Having discussed <em>what</em> linear algebra is, we ask the other basic question: <em>why</em> is it useful?  One very broad answer could be:
    <ul>
      <li>
        Linear algebra is simple enough to be very well understood.  Moreover, computers can be programmed to do linear algebra computations quickly.
      </li>
      <li>
        Linear algebra is powerful enough that it can solve a <em>huge</em> range of different problems.
      </li>
    </ul>
    Here are some toy examples meant to give you an idea of how a plausible real-life problem can be translated into a linear algebra problem.  These four examples are also intended to be representative applications of each of the four chapters of this book.
  </p>

  <specialcase xml:id="overview-traffic-flow">
    <p>
      The following diagram represents traffic flow around the town square.  The streets are all one way, and the numbers and arrows indicate the number of cars per hour flowing along each street, as measured by sensors underneath the roads.
      <latex-code>
\tikzset{
  mid arrow/.style={
    postaction={
      decoration={
        markings,
        mark=at position #1 with {\arrow{Stealth[scale=1]}},
      },
      decorate
    },
  },
  rmid arrow/.style={
    postaction={
      decoration={
        markings,
        mark=at position #1 with {\arrowreversed{Stealth[scale=1]}},
      },
      decorate
    }
  },
  mid arrow/.default={0.5},
  rmid arrow/.default={0.5},
}
  \begin{tikzpicture}[scale=2, thick,
      every node/.style={inner sep=3pt, label distance=1mm}]
    \node at (0,2.4) {Traffic flow (cars/hr)};
    \point[scale=1.5] (A) at (-1,1);
    \point[scale=1.5] (B) at (1,1);
    \point[scale=1.5] (C) at (1,-1);
    \point[scale=1.5] (D) at (-1,-1);
    \draw[mid arrow] (A.center) to["$x$"] (B.center);
    \draw[mid arrow] (B.center) to["$y$"] (C.center);
    \draw[mid arrow] (C.center) to["$z$"] (D.center);
    \draw[mid arrow] (D.center) to["$w$"] (A.center);
    \draw[rmid arrow=.3] (A.center) to["$120$"] +(-1,0);
    \draw[mid arrow=.7] (A.center) to["$250$"] +(0,1);
    \draw[mid arrow=.7] (B.center) to["$70$" swap] +(1,0);
    \draw[rmid arrow=.3] (B.center) to["$120$" swap] +(0,1);
    \draw[rmid arrow=.3] (C.center) to["$530$"] +(1,0);
    \draw[mid arrow=.7] (C.center) to["$390$"] +(0,-1);
    \draw[mid arrow=.7] (D.center) to["$175$" swap] +(-1,0);
    \draw[rmid arrow=.3] (D.center) to["$115$" swap] +(0,-1);
  \end{tikzpicture}
      </latex-code>
      There are no sensors underneath some of the streets, so we do not know how much traffic is flowing around the square itself.  What are the values of <m>x,y,z,w</m>?
    </p>

    <p>
      In order to turn this problem into a system of equations, one has to <em>observe</em> that  the number of cars entering each intersection has to equal the number of cars leaving that intersection.  Thus we obtain a system of four equations in four unknowns, one equation for each intersection:
      <me>
        \syseq{
          w + 120 = x + 250;
          x + 120 = y + 70;
          y + 530 = z + 390;
          z + 115 = w + 175\rlap.
        }
      </me>
      We will thoroughly discuss a systematic method for solving systems of equations, namely, <xref ref="elimination" text="title">Gauss<ndash/>Jordan elimination</xref>.  However, there are some questions that present themselves already (you can reveal the <xref ref="intro-answers">Answers</xref> below):
    </p>

    <p>
      <em>Question:</em> What has to be true about the known quantities in order for a solution to exist?
    </p>

    <p>
      <em>Question:</em> Supposing a solution does exist, how do you know a priori that there must be infinitely many?
    </p>

  </specialcase>

  <remark hide-type="true" xml:id="intro-answers">
    <title>Answers</title>
    <p>
      In order for a solution to exist, the total number of cars entering the town square has to equal the total number of cars exiting the town square.
    </p>
    <p>
      If one solution exists, then there are infinitely many others: any number of cars could be traveling in a loop around the town square without affecting the number of cars entering or exiting the area.
    </p>
  </remark>

  <p>
    The example above illustrates an important point.  Learning linear algebra gives you a set of tools for solving systems of linear equations.  In order to use linear algebra, first you have to <em>translate</em> your problem of interest into a system of equations, then you have to <em>interpret</em> the result in the context of the original problem.
  </p>

  <specialcase>
    <p>
      An asteroid has been observed at the following locations:
      <me>
        (0,2),\, (2,1),\, (1,-1),\, (-1,-2),\, (-3,1),\, (-1,-1).
      </me>
      Its orbit around the sun is elliptical; it is described by an equation of the form
      <me>
        x^2 + By^2 + Cxy + Dx + Ey + F = 0.
      </me>
      <em>Question:</em> what is the most likely orbit of the asteroid, given that there was some error in measuring its position?
    </p>

    <p>
      If the data points lay on the ellipse defined by the above equation, then substituting the <m>(x,y)</m>-values of each data point into the equation would give the equality <m>0=0</m>.  In other words, the following equations would hold:
      <me>
\def\eqline#1#2{(#1)^2 + B(#2)^2 + C(#1)(#2) + D(#1) + E(#2) + F = 0}
\edef\eqs{\eqline02;
  \eqline21;
  \eqline1{-1};
  \eqline{-1}{-2};
  \eqline{-3}1;
  \eqline{-1}{-1}
}
\spalignsysdelims..
\expandafter\syseq\expandafter{\eqs\rlap.}
      </me>
      We have translated our problem into a system of six linear equations in five unknowns.  Note that the unknowns are the <em>coefficients</em> <m>A,B,C,D,E,F</m> of the equation, as they should be: these coefficients determine the ellipse.
    </p>

      <p>
        There is no actual solution to this system (perhaps due to measurement error)<mdash/>the points do not lie on any ellipse.  So we ask a new question: what is the best <em>approximate</em> solution of this system?  We will see how to ask this question precisely, as well as how to answer it, using the method of least squares in <xref ref="least-squares"/>; the answer is:
      <latex-code>
\begin{tikzpicture}[thin border nodes, whitebg nodes]
  \draw[grid lines] (-6,-4) grid (6,4);
  \draw[->] (-6,0) -- (6,0);
  \draw[->] (0,-4) -- (0,4);

  \point["{$(0,2)$}" above] at (0,2);
  \point["{$(2,1)$}" right] at (2,1);
  \point["{$(1,-1)$}" {right,yshift=-1mm}] at (1,-1);
  \point["{$(-1,-2)$}" {below,xshift=1.5mm}] at (-1,-2);
  \point["{$(-3,1)$}" {above,xshift=-1.5mm}] at (-3,1);
  \point["{$(-1,1)$}" below] at (-1,1);

  \draw[thick, seq-red] (-0.760768, -0.0153293)
      ellipse[x radius=2.61837, y radius=1.84472, rotate=26.0068];
  \node[text=seq-red, font=\normalsize] at (0, -3.3)
    {$266 x^2 + 405 y^2 - 178 xy + 402 x - 123 y - 1374 = 0$};
\end{tikzpicture}
      </latex-code>
    </p>
  </specialcase>

  <note hide-type="true">
    <title>Historical Note</title>
    <p>
      Gauss invented the method of least squares to find a best-fit ellipse:
he correctly predicted the (elliptical) orbit of the asteroid Ceres as it passed behind
the sun in 1801.
    </p>
  </note>

  <specialcase xml:id="overview-eg-rabbits">
    <p>
      In a population of rabbits,
      <ol>
        <li>half of the newborn rabbits survive their first year;</li>
        <li>of those, half survive their second year;</li>
        <li>the maximum life span is three years;</li>
        <li>on average, a rabbit produces 0, 6, 8 baby rabbits its first, second, and third years, respectively.</li>
      </ol>
      <em>Question:</em> Given the rabbit population today, how many rabbits will there be in 100 years?
    </p>

    <p>
      In order to answer this question, first we give names to the unknown quantities:
      <me>
        \spalignsysdelims..
        \syseq{
          x_n = \text{the number of 0-year-old rabbits in year $n$};
          y_n = \text{the number of 1-year-old rabbits in year $n$};
          z_n = \text{the number of 2-year-old rabbits in year $n$}\rlap.;
        }
      </me>
      The rules for rabbit reproduction can then be translated into the following system of equations:
      <me>
        \syseq{
            x_{n+1} = \. \+ 6y_n + 8z_n;
            y_{n+1} = \frac 12x_n;
            z_{n+1} = \. \+ \frac 12y_n\rlap.
          }
      </me>
      A system of equations of this form, in which the <q>state at time <m>n+1</m></q> is determined by a system of linear equations in the <q>state at time <m>n</m>,</q> is called a <term>difference equation</term>.  We will learn how to solve difference equations using <xref ref="eigenvalues" text="title">eigenvalues</xref> and <xref ref="diagonalization" text="title">diagonalization</xref>.
    </p>

    <p>
      A useful variant of the above question is: what is the <em>asymptotic</em> behavior of this system?  What can we say <em>qualitatively</em> about the number of rabbits after a long enough initial time has passed?  The following simulation may give you some idea of what the answer is.
    </p>

    <figure>
      <caption>Left: the population of rabbits in a given year.  Right: the proportions of rabbits in that year.  Choose any values you like for the starting population, and click <q>Advance 1 year</q> several times.  What do you notice about the long-term behavior of the ratios?  This phenomenon turns out to be due to eigenvectors.</caption>
      <mathbox source="demos/rabbits.html" height="300px"/>
    </figure>
  </specialcase>

  <note> 
    <p>
      A famous example of a difference equation is Google<rsq/>s PageRank algorithm, also known as the <q>25 billion dollar eigenvector.</q>
    </p>
  </note>

  <specialcase>
    <p>
      An online movie-streaming service collects star ratings from its viewers and uses these to predict what movies you will like based on your previous ratings.  The following are the ratings that ten (fictitious) people gave to three (<url href="https://seinfeld.fandom.com/wiki/List_of_Seinfeld_fictional_films">fictitious</url>) movies, on a scale of 0<ndash/>10:
      <latex-code>
    \begin{tabular}{r|cccccccccc}
      &amp; Abe &amp; Amy &amp; Ann &amp; Ben &amp; Bob &amp; Eve &amp; Dan &amp; Don &amp; Ian &amp; Meg \\\hline
      \textit{Prognosis Negative} &amp; 7.8&amp;6.1&amp;2.4&amp;9.8&amp;10&amp;3.0&amp;6.3&amp;3.6&amp;6.7&amp;6.3 \\
      \textit{Ponce De Leon} &amp; 6.0&amp;7.9&amp;6.4&amp;8.1&amp;7.1&amp;6.4&amp;7.3&amp;7.9&amp;6.2&amp;8.1 \\
      \textit{Lenore's Promise} &amp; 5.8&amp;8.2&amp;8.2&amp;6.8&amp;6.2&amp;8.7&amp;7.3&amp;9.2&amp;6.8&amp;8.2
    \end{tabular}
      </latex-code>
      Jim gave <em>Prognosis Negative</em> a rating of 8.5 and <em>Ponce de Leon</em> a rating of 6.2.
    </p>

    <p>
      <em>Question:</em> How would you expect Jim to rate <em>Lenore<rsq/>s Promise</em>?  How confident are you in that expectation?
    </p>

    <p>
      We will learn one method of answering this question using the <xref ref="svd" text="title">singular value decomposition</xref> and <xref ref="pca" text="title">principal component analysis</xref>.  The answer is <m>\approx 5.9</m> stars, with a standand deviation of <m>\approx 0.18</m> stars.
    </p>
  </specialcase>

  <note>
    <p>
    According to this <url href="https://www.nytimes.com/2008/11/23/magazine/23Netflix-t.html?pagewanted=all">New York Times Magazine article</url>, the above example really is the idea behind Netflix<rsq/>s algorithm<mdash/>which earned its creator a <dollar/>1,000,000 prize.
    </p>
  </note>

</paragraphs>

<paragraphs>
  <title>Organization of This Textbook</title>

  <p>
    Much of this text is motivated by computational considerations.  It is important to know how to perform the calculations necessary to solve the kinds of problems outlined above, but this is not the primary goal.  This text is about the much more subtle process of translating a real-life problem into a linear algebra problem that can be solved efficiently on a computer.  This is not a book about the fascinating field of numerical linear algebra; rather, it presents a <em>theoretical framework</em> for understanding the linear algebra toolbox, which can be used to conceptualize a given real-life problem.
  </p>

  <bluebox>
    <p>
      Learning the algorithms in the linear algebra toolbox is the easy part.  The challenge is to gain a conceptual understanding of the linear algebra toolbox, so that you know which algorithms to use to solve a given problem.
    </p>
  </bluebox>

  <p>
    The content of this textbook is organized into four chapters, which will present roughly the following material.
    <ol>
      <li>
        <p>
          Solving Systems of Linear Equations.
          <ul>
            <li>
              Use the Gauss<ndash/>Jordan algorithm to systematically solve systems of linear equations.
            </li>
            <li>
              Use <m>PA=LU</m> decompositions to solve systems of equations efficiently on a computer.
            </li>
            <li>
              Gain a geometric understanding of the solution set of a system of equations.
            </li>
          </ul>
        </p>
      </li>
      <li>
        <p>
          Orthogonality and Least Squares.
          <ul>
            <li>
              Learn the language of subspaces, bases, and orthogonal projections.
            </li>
            <li>
              Use this framework to find the best <em>approximate</em> solution of a system of equations using the method of least squares.
            </li>
            <li>
              Use the Gram<ndash/>Schmidt algorithm and the <m>QR</m> decomposition to solve least-squares problems efficiently on a computer.
            </li>
          </ul>
        </p>
      </li>
      <li>
        <p>
          The Eigenvalue Problem.
          <ul>
            <li>
              Solve the <em>eigenvalue problem</em> <m>Ax=\lambda x</m> using determinants and the characteristic polynomial.
            </li>
            <li>
              Use eigenvalues and diagonalization to solve difference equations and ordinary differential equations.
            </li>
            <li>
              Understand the geometry (or <em>dynamics</em>) of a diagonalizable matrix.
            </li>
          </ul>
        </p>
      </li>
      <li>
        <p>
          The Singular Value Decomposition.
          <ul>
            <li>
              Solve quadratic optimization problems by diagonalizing symmetric matrices.
            </li>
            <li>
              Learn the singular value decomposition and principal component analysis, and understand how to use them.
            </li>
          </ul>
        </p>
      </li>
    </ol>
  </p>

  <p>
    Almost all of the theoretical material in this book is necessary to understand the singular value decomposition.
  </p>

  <bluebox>
    <p>
      The singular value decomposition is the capstone of this textbook.  It is an extremely powerful tool with myriad applications in a range of subjects.
    </p>
  </bluebox>

</paragraphs>

<paragraphs>
  <title>How to Use This Textbook</title>
  <concept tag="concept-library"/>

  <p>
    There are a number of different categories of ideas that are contained in most sections.  They are listed at the top of the section, under <em>Objectives</em>, for easy review.  We classify them as follows.
    <ul>
      <li>
        <em>Recipes:</em> these are algorithms that are generally straightforward (if sometimes tedious), and are usually done by computer in real life.  They are nonetheless important to learn and to practice.
      </li>
      <li>
        <em>Vocabulary words:</em> forming a conceptual understanding of the subject of linear algebra means being able to communicate about them precisely.  The vocabulary words have precise definitions, which must be learned and used correctly.
      </li>
      <li>
        <em>Essential vocabulary words:</em> these vocabulary words are essential in that they form the essence of the subject of linear algebra.
      </li>
      <li>
        <em>Theorems:</em> these describe in a precise way how the objects of interest relate to each other.  Knowing which recipe to use in a given situation generally means recognizing which vocabulary words to use to describe the situation, and understanding which theorems apply to them.
      </li>
      <li>
        <em>Pictures:</em> visualizing the geometry underlying the algebra means interpreting and drawing pictures of the objects involved.  The pictures are meant to be a core part of the material in the text.
      </li>
    </ul>
  </p>

  <p>
    There are dozens of interactive demos contained in the text, which were created to illustrate the geometry of the topic.  Click the maximize button, and play around with them!  You will need a modern browser.  Internet Explorer is not a modern browser; try Safari, <url href="https://www.google.com/chrome/browser/desktop/">Chrome</url>, or <url href="https://www.mozilla.org/en-US/firefox/">Firefox</url>.  Here is a demo from <xref ref="least-squares"/>:
  </p>

  <figure>
    <caption>Click and drag the points on the grid on the right.</caption>
    <mathbox source="demos/bestfit-implicit.html?func=x^2+A*y^2+B*x*y+C*x+D*y+EE&amp;v1=0,2&amp;v2=2,1&amp;v3=1,-1&amp;v4=-1,-2&amp;v5=-3,1&amp;v6=-1,1&amp;range=5&amp;rangez=25&amp;camera1=-2.14,.814,1.69" height="500px"/>
  </figure>

  <p>
    This book contains a <em>concept library</em>: a system of tagging certain definitions, theorems, exercises, and other elements with the fine-grained mini-concepts needed to understand them.  Click on the light bulb in the left margin to view the associated concepts; you can find an example above, to the left of <q>How to Use This Textbook</q>.  (This button may not be visible on mobile browsers, where the left margin is too small.)  The concept library is meant to be used in conjunction with assessments to pinpoint which theoretical aspects the reader has not yet mastered.
  </p>

  <p>
    This textbook is targeted at Math 218D-1 at Duke University.  As such, it contains exactly the material that is taught in that class.  <em>Students in Math 218D-1 are responsible for understanding all visible content.</em>  This includes the demos!  In the online version some extra material (most examples and proofs, for instance) is hidden, in that one needs to click on a link to reveal it, like this:
  </p>

  <remark hide-type="true">
    <title>Hidden Content</title>
    <p>
      Hidden content is meant to enrich your understanding of the topic, but is not an official part of Math 218D-1.  That said, the text will be very hard to follow without understanding the examples, and studying the proofs is an excellent way to learn the conceptual part of the material.  (Not applicable to the PDF version.)
    </p>
  </remark>

  <!-- TODO: Sage cell -->
  <!-- TODO: exercises, when ready -->

</paragraphs>

<paragraphs>
  <title>Feedback</title>
  <p>
    Every page of the online version has a link on the bottom for providing feedback.  This will take you to the GitHub Issues page for this book.  It requires a free GitHub account to access.
  </p>
</paragraphs>


</preface>
